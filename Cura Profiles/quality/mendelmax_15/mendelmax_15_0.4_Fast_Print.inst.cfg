[general]
version = 4
name = Fast
definition = mendelmax_15

[metadata]
setting_version = 15
type = quality
quality_type = fast
weight = -2
global_quality = True

[values]
layer_height = 0.2

acceleration_enabled = True
adhesion_type = skirt
jerk_enabled = True
retraction_combing = all
speed_slowdown_layers = 1
support_enable = False
support_type = buildplate
travel_retract_before_outer_wall = False

acceleration_infill = =acceleration_print
acceleration_layer_0 = 1000
acceleration_print = 1250
acceleration_roofing = 1000
acceleration_topbottom = 1000
acceleration_travel = 2000
acceleration_wall = 800
bottom_layers = =999999 if infill_sparse_density == 100 else math.ceil(round(bottom_thickness / resolveOrValue('layer_height'), 4))
cool_min_layer_time = 10
infill_before_walls = False
infill_enable_travel_optimization = True
infill_line_width = 0.45
infill_sparse_density = 15
jerk_print = 8
jerk_travel = 10
material_diameter = 1.75
material_flow = 100
material_print_temperature = =default_material_print_temperature
material_print_temperature_layer_0 = =material_print_temperature
optimize_wall_printing_order = True
retract_at_layer_change = True
retraction_amount = 0.8
retraction_extra_prime_amount = 0
retraction_hop = 0.6
retraction_hop_enabled = True
retraction_min_travel = 1.5
retraction_speed = 35
roofing_layer_count = 1
speed_infill = =math.ceil(speed_print * 100 / 60)
speed_layer_0 = =speed_print * 30 / 60
speed_print = 50
speed_roofing = 35
speed_topbottom = 50
speed_travel = 200
speed_wall_0 = =math.ceil(speed_print * 40 / 60)
speed_z_hop = 20
support_angle = 80
support_bottom_density = 40
support_infill_rate = =15 if support_enable else 0 if support_tree_enable else 15
support_interface_enable = False
support_interface_pattern = zigzag
support_line_width = 0.35
support_roof_density = 60
support_z_distance = 0.2
top_layers = =0 if infill_sparse_density == 100 else math.ceil(round(top_thickness / resolveOrValue('layer_height'), 4))
top_thickness = =top_bottom_thickness
travel_avoid_other_parts = False
wall_line_count = =1 if magic_spiralize else max(1, round((wall_thickness - wall_line_width_0) / wall_line_width_x) + 1) if wall_thickness != 0 else 0
wall_thickness = =wall_line_width_0 if magic_spiralize else 0.8
z_seam_corner = z_seam_corner_inner
zig_zaggify_infill = =infill_pattern == 'cross' or infill_pattern == 'cross_3d'
